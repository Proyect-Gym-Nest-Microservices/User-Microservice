
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  avatarUrl    String?
  email        String        @unique
  name         String
  password     String
  age          Int?
  gender       Gender?
  lastLogin    DateTime?
  weight       Float?
  height       Float?
  fitnessLevel FitnessLevel?
  goal         Goal?
  injury       String?
  userType     UserType      @default(STUDENT)
  rating Rating[]
  nutritionIds    String[] @default([])
  workoutIds      Int[]    @default([])
  trainingPlanIds Int[]    @default([])
  roles Role[] @default([USER_ROLE])
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Rating {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  score      Float      @default(0)
  userId     String     @db.ObjectId
  targetId   Int     // exerciseId, trainingId, workoutId, equipmentId
  targetType TargetType
  user       User       @relation(fields: [userId], references: [id])
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  @@unique([userId, targetId, targetType])
  @@map("ratings")
}

enum TargetType {
  WORKOUT
  TRAINING
  EXERCISE
  EQUIPMENT
  NUTRITION
}

enum Role {
  USER_ROLE
  ADMIN_ROLE
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

enum FitnessLevel {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}

enum Goal {
  LOSE_WEIGHT
  GAIN_MUSCLE
  IMPROVE_ENDURANCE
  MAINTAIN
}

enum UserType {
  STUDENT
  PROFESSOR
  ADMINISTRATION
}
