// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  avatarUrl    String?
  email        String        @unique
  name         String
  password     String
  age          Int?
  gender       Gender?
  lastLogin   DateTime?
  weight       Float? // Peso del usuario
  height       Float?
  fitnessLevel FitnessLevel? // Nivel de estado fisico
  goal         Goal? // Objetivo del usuario (e.g. perder peso, ganar m√∫sculo)
  injury       String? // Lesion
  userType     UserType      @default(STUDENT)

  // Para agregar a favoritos 
  // Referencias a otros microservicios, estos IDs son usados para hacer peticiones a los microservicios de Workout, Nutrition y Training Plan
  nutritionIds    String[] @default([])
  workoutIds      Int[]    @default([])
  trainingPlanIds Int[]    @default([])

  roles Role[] @default([USER_ROLE])

  isActive Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER_ROLE
  ADMIN_ROLE
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

enum FitnessLevel {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}

enum Goal {
  LOSE_WEIGHT
  GAIN_MUSCLE
  IMPROVE_ENDURANCE
  MAINTAIN
}

enum UserType {
  STUDENT
  PROFESSOR
  ADMINISTRATION
}
